{"version":3,"file":"js/17.aa44c647.js","mappings":"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AI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,EAAG,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,KAAM,EAAG,MACvgEC,GAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAA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","sources":["webpack://vue_project/./src/views/learn_ast_node/learn_ast_node.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/node_list.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree_node.vue","webpack://vue_project/./src/views/learn_ast_node/deal_ast.js","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree.js","webpack://vue_project/./src/views/learn_ast_node/node_list/div_to_input.js","webpack://vue_project/src/views/learn_ast_node/node_list/ast_tree_node.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree_node.vue?6300","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree_node.vue?249c","webpack://vue_project/src/views/learn_ast_node/node_list/ast_tree.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree.vue?67f6","webpack://vue_project/./src/views/learn_ast_node/node_list/ast_tree.vue?53b5","webpack://vue_project/src/views/learn_ast_node/node_list/node_list.vue","webpack://vue_project/./src/views/learn_ast_node/node_list/node_list.vue?974e","webpack://vue_project/./src/views/learn_ast_node/node_list/node_list.vue?f909","webpack://vue_project/./src/views/learn_ast_node/node_message/node_message.vue","webpack://vue_project/./src/views/learn_ast_node/node_message/message.vue","webpack://vue_project/./src/views/learn_ast_node/node_message/parse.js","webpack://vue_project/./src/views/learn_ast_node/node_message/json_tree_node.vue","webpack://vue_project/src/views/learn_ast_node/node_message/json_tree_node.vue","webpack://vue_project/./src/views/learn_ast_node/node_message/json_tree_node.vue?4f16","webpack://vue_project/./src/views/learn_ast_node/node_message/json_tree_node.vue?808f","webpack://vue_project/src/views/learn_ast_node/node_message/message.vue","webpack://vue_project/./src/views/learn_ast_node/node_message/message.vue?1af6","webpack://vue_project/./src/views/learn_ast_node/node_message/message.vue?0c14","webpack://vue_project/src/views/learn_ast_node/node_message/node_message.vue","webpack://vue_project/./src/views/learn_ast_node/node_message/node_message.vue?3d47","webpack://vue_project/./src/views/learn_ast_node/node_message/node_message.vue?2d29","webpack://vue_project/src/views/learn_ast_node/learn_ast_node.vue","webpack://vue_project/./src/views/learn_ast_node/learn_ast_node.vue?0308","webpack://vue_project/./src/views/learn_ast_node/learn_ast_node.vue?5d74","webpack://vue_project/./src/utils/timer/basic/now.js","webpack://vue_project/./src/utils/timer/debounce.js","webpack://vue_project/./node_modules/@babel/parser/lib/index.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"learnAstNode\"}},[_vm._m(0),_c('div',{staticClass:\"main\"},[_c('v-nodeList'),_c('v-nodeMessage')],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"iconfont icon-jiedianguanli\"}),_c('div',{staticClass:\"text\"},[_vm._v(\"Ast 节点学习\")])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"learnAstNode-codeList\"}},[_c('div',{staticClass:\"operation\"},[_c('div',{staticClass:\"icon\"},[_c('div',{staticClass:\"iconfont icon-output\",attrs:{\"title\":\"导出节点\"},on:{\"mousedown\":_vm.outputAstMessage}})]),_c('div',{staticClass:\"icon\"},[_c('div',{staticClass:\"iconfont icon-add\",attrs:{\"title\":\"添加节点\"},on:{\"mousedown\":_vm.addAstNode}})])]),_c('div',{staticClass:\"tree\"},[_c('c-astTree')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"astTree\",staticClass:\"component-ast-node-container\",attrs:{\"data-move\":_vm.isMoving},on:{\"mousemove\":_vm.moveNode,\"mousedown\":_vm.endMoveNode,\"mouseleave\":_vm.endMoveNode}},_vm._l((_vm.astMessage.astTree.children),function(child,index){return _c('c-astTreeNode',{key:index,attrs:{\"index\":index,\"data\":child}})}),1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"node\",staticClass:\"component-ast-node\"},[_c('div',{ref:\"content\",class:{\n\t\t\t'node-content': true,\n\t\t\t'move_in_top': ( _vm.moveInType === 0 ),\n\t\t\t'move_in_bottom': ( _vm.moveInType === 2 )\n\t\t},attrs:{\"data-selected\":_vm.data.selected},on:{\"mouseenter\":_vm.handleMouseenterContent,\"mouseleave\":_vm.handleMouseleaveContent,\"mousemove\":_vm.handleMousemoveContent,\"mousedown\":function($event){$event.stopPropagation();return _vm.handleMousedownContent.apply(null, arguments)}}},[_c('div',{class:{\n\t\t\t\texpand: true,\n\t\t\t\tleaf: _vm.isLeaf,\n\t\t\t\texpanded: _vm.isExpand && !_vm.isLeaf,\n\t\t\t},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.handleExpand.apply(null, arguments)}}},[_vm._v(\" › \")]),_c('div',{staticClass:\"label\"},[_c('span',{ref:\"label\",class:{\n\t\t\t\t\t\tspan: true,\n\t\t\t\t\t\tmove_in: (_vm.moveInType === 1)\n\t\t\t\t\t},attrs:{\"contentEditable\":_vm.isEditing},on:{\"keydown\":function($event){return _vm.editKeydown($event)},\"paste\":_vm.editPaste,\"blur\":_vm.finishEdit}},[_vm._v(_vm._s(_vm.data.nodeType))])]),_c('div',{staticClass:\"btns\",attrs:{\"data-show\":_vm.isEditing || _vm.isMoving,\"data-position\":_vm.isEditing ? 'initial' : 'absolute'}},[_c('div',{staticClass:\"btn\"},[_c('div',{staticClass:\"iconfont icon-yidong move\",attrs:{\"data-selected\":_vm.isMoving},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.startMoveNode.apply(null, arguments)}}}),_c('div',{staticClass:\"iconfont icon-bianji\",attrs:{\"data-selected\":_vm.isEditing},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.editNode(_vm.data)}}}),_c('div',{staticClass:\"iconfont icon-add\",attrs:{\"title\":\"添加节点\"},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.addChildNode(_vm.data)}}}),_c('div',{staticClass:\"iconfont icon-delete\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.deleteNode(_vm.data)}}})])])]),(!_vm.isLeaf)?_c('div',{ref:\"children\",staticClass:\"children\"},_vm._l((_vm.data.children),function(child,index){return _c('component-ast-node',{key:index,attrs:{\"index\":index,\"data\":child}})}),1):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function getNewNode(nodeType, parent){\n\tlet node = {\n\t\tnodeType,\n\t\tchildren: [],\n\t\tcode: '',\n\t\tselected: false,\n\t\tedit: false\n\t};\n\n\tObject.defineProperty(node, \"parent\", {\n\t\tvalue: parent,\n\t\tenumerable: false,\n\t\twritable: true\n\t});\n\n\treturn node;\n}\n\nexport function outputAstMessage(astMessage){\n\tlet\n\t\tdealedMessage = {\n\t\t\tastTree: astMessage.astTree\n\t\t},\n\t\teleLink = document.createElement('a');\n\n\teleLink.download = 'astMessage.json';\n\teleLink.style.display = 'none';\n\t\t// 字符内容转变成blob地址\n\tvar blob = new Blob([JSON.stringify(dealedMessage, null, 4)]);\n\teleLink.href = URL.createObjectURL(blob);\n\t// 触发点击\n\t// document.body.appendChild(eleLink);\n\tdocument.body.appendChild(eleLink);\n\teleLink.click();\n\t// 然后移除\n\tdocument.body.removeChild(eleLink);\n}\n\nexport function initAstMessageJson(json){\n\t// console.log('json:', json);\n\tjson.selectedAstNode = [];\n\n\t// 为每个树节点添加父节点\n\tlet \n\t\tstack = [json.astTree],\n\t\ttreeNode;\n\n\twhile(stack.length > 0){\n\t\tlet treeNode = stack.pop();\n\n\t\ttreeNode.children.forEach((child)=>{\n\n\t\t\tObject.defineProperty(child, \"parent\", {\n\t\t\t\tvalue: treeNode,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true\n\t\t\t});\n\n\t\t\tstack.push(child);\n\n\t\t});\n\t}\n\n\treturn json;\n}","\n\nexport default {\n\troot: null,\n\n\tmovingTreeNode: null,\n\tcloneNode: null,\n\n\tmoveTargetTreeNode: null\n}\n","export function paste(div, e){\n\te.preventDefault();\n\tlet selection = document.getSelection(),\n\t\t\trange;\n\tif( selection.type !== 'None' ){\n\t\trange = selection.getRangeAt(0);\n\t}\n\n\tif( range ){\n\t\tif( range.startContainer !== range.endContainer ){\n\t\t\tthrow new Error('range 选择出错');\n\t\t}\n\t\tlet string = (e.clipboardData || window.clipboardData).getData('text');\n\t\tstring = string.replace(/\\n/g, ' ');\n\t\tif( range.startContainer === div ){\n\t\t\tlet text = document.createTextNode(string);\n\t\t\tthis.$refs.label.appendChild(text);\n\t\t\trange.setStart(text, text.length);\n\t\t\trange.setEnd(text, text.length);\n\t\t}else if( range.startContainer === div.childNodes[0] ){\n\t\t\tif( range.collapsed ){\n\t\t\t\trange.startContainer.insertData(range.startOffset, string);\n\t\t\t}else{\n\t\t\t\trange.startContainer.replaceData(range.startOffset, range.endOffset - range.startOffset ,string);\n\t\t\t}\n\t\t\tlet startOffset = range.startOffset;\n\t\t\trange.setStart(div.childNodes[0], startOffset + string.length);\n\t\t\trange.setEnd(div.childNodes[0], startOffset + string.length );\n\t\t}\n\t}\n}\n\n\nexport function startEdit(div){\n\tlet \n\t\tselection = document.getSelection(),\n\t\trange = document.createRange();\n\n\tif( div.childNodes.length > 0 ){\n\t\tif( div.childNodes.length === 1 && div.childNodes[0].nodeType === Node.TEXT_NODE ){\n\t\t\tlet text = div.childNodes[0]\n\t\t\trange.setStart(text, text.length);\n\t\t\trange.setEnd(text, text.length);\n\t\t\tselection.removeAllRanges();\n\t\t\tselection.addRange(range);\n\t\t}else{\n\t\t\tconsole.log('格式出错');\n\t\t}\n\t}else{\n\t\trange.setStart(div, 0);\n\t\trange.setEnd(div, 0);\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(range);\n\t}\n}\n\nexport function keydown(div, e, callback){\n\tswitch( e.keyCode ){\n\t\tcase 13:\n\t\t\te.preventDefault();\n\t\t\tcallback.finishEdit();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n}\n\nexport function getValue(div){\n\tif( div.childNodes.length === 0 ){\n\t\treturn '';\n\t}else if( div.childNodes.length === 1 && div.childNodes[0].nodeType === Node.TEXT_NODE ){\n\t\treturn div.childNodes[0].nodeValue;\n\t}\n}\n\n","<template>\n\t<div class=\"component-ast-node\"\n\t\tref=\"node\">\n\t\t<div :class=\"{\n\t\t\t\t'node-content': true,\n\t\t\t\t'move_in_top': ( moveInType === 0 ),\n\t\t\t\t'move_in_bottom': ( moveInType === 2 )\n\t\t\t}\"\n\t\t\tref=\"content\"\n\t\t\t:data-selected=\"data.selected\"\n\t\t\tv-on:mouseenter=\"handleMouseenterContent\"\n\t\t\tv-on:mouseleave=\"handleMouseleaveContent\"\n\t\t\tv-on:mousemove=\"handleMousemoveContent\"\n\t\t\tv-on:mousedown.stop=\"handleMousedownContent\">\n\t\t\t<div\n\t\t\t\t:class=\"{\n\t\t\t\t\texpand: true,\n\t\t\t\t\tleaf: isLeaf,\n\t\t\t\t\texpanded: isExpand && !isLeaf,\n\t\t\t\t}\"\n\t\t\t\tv-on:mousedown.stop=\"handleExpand\"> › </div>\n\t\t\t<div class=\"label\">\n\t\t\t\t\t<span ref=\"label\"\n\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\tspan: true,\n\t\t\t\t\t\t\tmove_in: (moveInType === 1)\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:contentEditable=\"isEditing\"\n\t\t\t\t\t\tv-on:keydown=\"editKeydown($event)\"\n\t\t\t\t\t\tv-on:paste=\"editPaste\"\n\t\t\t\t\t\tv-on:blur=\"finishEdit\" >{{data.nodeType}}</span>\n\t\t\t</div>\n\t\t\t<div class=\"btns\"\n\t\t\t\t:data-show=\"isEditing || isMoving\"\n\t\t\t\t:data-position=\"isEditing ? 'initial' : 'absolute'\">\n\t\t\t\t<div class=\"btn\">\n\t\t\t\t\t<div class=\"iconfont icon-yidong move\"\n\t\t\t\t\t\t:data-selected=\"isMoving\"\n\t\t\t\t\t\tv-on:mousedown.stop=\"startMoveNode\"></div>\n\n\t\t\t\t\t<div class=\"iconfont icon-bianji\"\n\t\t\t\t\t\t:data-selected=\"isEditing\"\n\t\t\t\t\t\tv-on:mousedown.stop=\"editNode(data)\"></div>\n\n\t\t\t\t\t<div class=\"iconfont icon-add\"\n\t\t\t\t\t\ttitle=\"添加节点\"\n\t\t\t\t\t\tv-on:mousedown.stop=\"addChildNode(data)\"></div>\n\n\t\t\t\t\t<div class=\"iconfont icon-delete\"\n\t\t\t\t\t\tv-on:mousedown.stop=\"deleteNode(data)\"></div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"children\"\n\t\t\tref=\"children\"\n\t\t\tv-if=\"!isLeaf\">\n\t\t\t<component-ast-node \n\t\t\t\tv-for=\"(child, index) in data.children\"\n\t\t\t\t:key=\"index\"\n\t\t\t\t:index=\"index\"\n\t\t\t\t:data=\"child\"/>\n\t\t</div>\n\t</div>\n</template>\n\n\n<script>\n\timport ast from '../node_message/ast.json';\n\timport { getNewNode } from '../deal_ast.js';\n\timport astTreeMessage from './ast_tree.js';\n\timport { startEdit, paste, keydown, getValue } from './div_to_input.js';\n\n\texport default {\n\t\tname: 'component-ast-node',\n\t\tprops: {\n\t\t\tindex: {\n\t\t\t\ttype: Number,\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\ttype: Object,\n\t\t\t}\n\t\t},\n\t\tinject: ['astMessage'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tisLeaf: !this.data.children || this.data.children.length === 0,\n\t\t\t\tisExpand: false,\n\t\t\t\tisEditing: false,\n\n\t\t\t\tisMoving: false,\n\t\t\t\tmoveInType: null,\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\t'data.children': function(newVal, oldVal){\n\t\t\t\tif( newVal.length > 0 && this.isLeaf ){\n\t\t\t\t\tthis.isLeaf = false;\n\t\t\t\t}else if( newVal.length === 0 && !this.isLeaf ){\n\t\t\t\t\tthis.isLeaf = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\thandleExpand(){\n\t\t\t\tif( this.isLeaf ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.isExpand = !this.isExpand;\n\t\t\t\tlet height ;\n\t\t\t\tif( this.isExpand ){\n\t\t\t\t\tthis.$refs.children.style.height = null;\n\t\t\t\t\theight = this.$refs.children.clientHeight;\n\t\t\t\t\tthis.$refs.children.style.height = 0;\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = `${height}px`;\n\t\t\t\t\t}, 0);\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = null;//\t300 是 css transition 的数据\n\t\t\t\t\t}, 300);\n\t\t\t\t}else{\n\t\t\t\t\theight = this.$refs.children.clientHeight;\n\t\t\t\t\tthis.$refs.children.style.height = `${height}px`;\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = 0;\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeleteNode(node){\n\t\t\t\tif( this.data.selected ){\n\t\t\t\t\tlet indexOf = this.astMessage.selectedAstNode.indexOf(this.data);\n\t\t\t\t\tthis.astMessage.selectedAstNode.splice( indexOf, 1 );\n\t\t\t\t}\n\t\t\t\tlet parentChildren = node.parent.children;\n\t\t\t\tparentChildren.splice( this.index, 1 );\n\t\t\t},\n\n\t\t\teditNode(){\n\t\t\t\tif( this.isEditing ){\n\t\t\t\t\treturn; \n\t\t\t\t}\n\t\t\t\tthis.isEditing = true;\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tstartEdit(this.$refs.label);\n\t\t\t\t});\n\t\t\t},\n\t\t\teditKeydown(e){\n\t\t\t\tkeydown(this.$refs.label, e, {\n\t\t\t\t\tfinishEdit: this.finishEdit\n\t\t\t\t});\n\t\t\t},\n\t\t\teditPaste(e){\n\t\t\t\tpaste(this.$refs.label, e);\n\t\t\t},\n\t\t\tfinishEdit(){\n\t\t\t\tthis.isEditing = false;\n\t\t\t\tdocument.getSelection().removeAllRanges();\n\t\t\t\tthis.data.nodeType = getValue(this.$refs.label);\n\t\t\t\t// console.log('this.data.nodeType:', this.data.nodeType);\n\t\t\t},\n\n\t\t\taddChildNode(node){\n\t\t\t\tnode.children.push(\n\t\t\t\t\tgetNewNode(`${node.nodeType}-${node.children.length + 1}`, node)\n\t\t\t\t);\n\t\t\t},\n\t\t\tstartMoveNode(e){\n\t\t\t\tastTreeMessage.root.$emit('startMoveNode', e, this);\n\t\t\t},\n\n\t\t\thandleMousedownContent(){\n\t\t\t\tif( astTreeMessage.movingTreeNode ){//\t正在移动\n\t\t\t\t\tastTreeMessage.root.$emit('endMoveNode');\n\t\t\t\t}else{\n\t\t\t\t\tif( ast[this.data.nodeType] ){\n\t\t\t\t\t\tthis.data.selected = !this.data.selected;\n\t\t\t\t\t\tif( this.data.selected ){\n\t\t\t\t\t\t\tif( this.astMessage.selectedAstNode[0] ){// 只选择一个\n\t\t\t\t\t\t\t\tthis.astMessage.selectedAstNode[0].selected = false;\n\t\t\t\t\t\t\t\tthis.astMessage.selectedAstNode.pop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astMessage.selectedAstNode.push(this.data);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlet indexOf = this.astMessage.selectedAstNode.indexOf(this.data);\n\t\t\t\t\t\t\tthis.astMessage.selectedAstNode.splice( indexOf, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.handleExpand();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleMouseenterContent(e){\n\t\t\t\tif( astTreeMessage.moveTargetTreeNode ){\n\t\t\t\t\tconsole.error('代码出错');\n\t\t\t\t}\n\t\t\t\tif( astTreeMessage.movingTreeNode && astTreeMessage.movingTreeNode !== this ){\n\t\t\t\t\tastTreeMessage.moveTargetTreeNode = this;\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleMouseleaveContent(e){\n\t\t\t\tif( astTreeMessage.movingTreeNode && astTreeMessage.moveTargetTreeNode === this ){\n\t\t\t\t\tastTreeMessage.moveTargetTreeNode.moveInType = null;\n\t\t\t\t\tastTreeMessage.moveTargetTreeNode = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleMousemoveContent(e){\n\t\t\t\tif( astTreeMessage.moveTargetTreeNode === this ){\n\t\t\t\t\tif( e.offsetY < 8 ){\n\t\t\t\t\t\tastTreeMessage.root.$emit('showEndMoveTarget', 0);\n\n\t\t\t\t\t}else if( e.offsetY > this.$refs.content.clientHeight - 8 ){\n\t\t\t\t\t\tif( this.index === this.data.parent.children.length - 1 ){\n\t\t\t\t\t\t\tastTreeMessage.root.$emit('showEndMoveTarget', 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tastTreeMessage.root.$emit('showEndMoveTarget', 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\tif( this.data.selected ){\n\t\t\t\tthis.astMessage.selectedAstNode.push(this.data);\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tif( !this.isExpand && !this.isLeaf){\n\t\t\t\tthis.$refs.children.style.height = 0;\n\t\t\t}\n\t\t},\n\t\tdestroyed(){\n\t\t\t// console.log(this.data.nodeType);\n\t\t}\n\t}\n\n</script>\n\n<style lang=\"less\">\n\t.component-ast-node{\n\t\twidth: 100%;\n\t\t>.node-content{\n\t\t\tposition: relative;\n\t\t\tdisplay: flex;\n\t\t\twidth: 100%;\n\t\t\tline-height: 0.22rem;\n\t\t\tfont-size: 0.14rem;\n\t    color: #ffffff;\n\t    background-color: #494949;\n\t\t\ttransition: background-color .3s, height .3s;\n\t    cursor: pointer;\n\t    overflow: hidden;\n\t\t\tborder-bottom: 0.04rem solid rgba(0,0,0,0);\n\t\t\tborder-top: 0.04rem solid rgba(0,0,0,0);\n\t    >.expand{\n\t    \twidth: 0.22rem;\n\t    \theight: 0.22rem;\n\t\t    text-align: center;\n\t\t    overflow: hidden;\n        transition: transform .3s ease-in-out, opacity .3s ease-in-out, width .3s;\n\t    }\n\t    >.expand.expanded{\n\t\t    transform: rotate(90deg);\n\t    }\n\t    >.expand.leaf{\n\t    \t//width: 0.14rem;\n\t    \topacity: 0;\n\t    \tpointer-events: none;\n\t\t    transform: rotate(90deg);\n\t    }\n\t    >.label{\n\t    \tflex: 1;\n\t    \twidth: 0;\n\t\t\t\tword-break: break-word;\n\t\t\t\t>.span{\n\t\t\t\t\twidth: fit-content;\n\t\t\t\t\tline-height: 0.22rem;\n\t\t\t\t\ttransition: background-color .3s;\n\t\t\t\t}\n\t\t\t\t>.span.move_in{\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground-color: #9b9b9b;\n\t\t\t\t}\n\t    }\n\t    >.btns{\n\t    \t//position: absolute;\n\t    \tright: 0;\n\t    \ttop: 0;\n\t    \tpadding: 0 0.1rem;\n\t    \theight: 0.22rem;\n\t\t    background-color: #494949;\n\t\t    opacity: 0;\n\t    \ttransition: opacity .3s ,background-color .3s;\n\t    \t>.btn{\n\t    \t\theight: 100%;\n    \t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\n\t    \t\t>.iconfont{\n\t    \t\t\twidth: 0.2rem;\n\t\t\t\t    height: 0.2rem;\n\t\t\t\t    line-height: 0.2rem;\n\t\t\t\t    font-size: 0.12rem;\n\t\t\t\t    text-align: center;\n\t\t\t\t    cursor: pointer;\n\t\t\t\t    border-radius: 0.04rem;\n\t\t\t\t    color: #ffffff;\n\t\t\t    \ttransition: background-color  .3s;\n\t\t\t\t\t\t&:hover{\n\t\t\t\t\t\t\tbackground-color: #696969;\n\t\t\t\t\t\t}\n\t    \t\t}\n\t    \t\t>.iconfont[data-selected=\"true\"]{\n\t\t\t\t\t\t\tbackground-color: #000000;\n\t    \t\t}\n\t    \t\t>.move{\n\t    \t\t\tcursor: move;\n\t    \t\t}\n\n\t    \t}\n\t    }\n\t    >.btns[data-show=\"true\"]{\n\t    \topacity: 1;\n\t    }\n\t    >.btns[data-position=\"initial\"]{\n\t    \tposition: initial;\n\t    }\n\t    >.btns[data-position=\"absolute\"]{\n\t    \tposition: absolute;\n\t    }\n\t    &:hover{\n\t    \tbackground-color: #333333;\n\t\t    >.btns{\n\t\t    \topacity: 1;\n\t\t    \tbackground-color: #333333;\n\t\t    }\n\t    }\n\n\t\t}\n\t\t>.node-content.move_in_top{\n\t\t\tborder-top: 0.04rem solid #9b9b9b;\n\t\t}\n\t\t>.node-content.move_in_bottom{\n\t\t\tborder-bottom: 0.04rem solid #9b9b9b;\n\t\t}\n\t\t>.node-content[data-selected=\"true\"]{\n\t\t\tbackground-color: #272727;\n\t    >.btns{\n\t    \tbackground-color: #272727;\n\t    }\n\t\t}\n\t\t>.node-content[data-hide=\"true\"]{\n\n\t\t\theight: 0;\n\t\t}\n\t\t>.children{\n\t\t\tmargin: 0 0 0 0.16rem;\n\t\t\toverflow: hidden;\n\t\t\ttransition: height .3s;\n\t    border-left: 0.01rem solid #666666;\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ast_tree_node.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ast_tree_node.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ast_tree_node.vue?vue&type=template&id=73cac068&\"\nimport script from \"./ast_tree_node.vue?vue&type=script&lang=js&\"\nexport * from \"./ast_tree_node.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ast_tree_node.vue?vue&type=style&index=0&id=73cac068&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div class=\"component-ast-node-container\"\n\t\tref=\"astTree\"\n\t\t:data-move=\"isMoving\"\n\t\tv-on:mousemove=\"moveNode\"\n\t\tv-on:mousedown=\"endMoveNode\"\n\t\tv-on:mouseleave=\"endMoveNode\">\n\t\t<c-astTreeNode\n\t\t\tv-for=\"(child, index) in astMessage.astTree.children\"\n\t\t\t:key=\"index\"\n\t\t\t:index=\"index\"\n\t\t\t:data=\"child\"/>\n\t</div>\n</template>\n\n<script>\n\timport astTreeNode from './ast_tree_node.vue';\n\timport astTreeMessage from './ast_tree.js';\n\n\texport default {\n\t\tcomponents: {\n\t\t\t'c-astTreeNode': astTreeNode,\n\t\t},\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tisMoving: false,\n\t\t\t\tx: null,\n\t\t\t\ty: null,\n\t\t\t\toffsetY: null,\n\t\t\t}\n\t\t},\n\t\tinject: ['astMessage'],\n\t\tmethods: {\n\t\t\tmoveNode(e){\n\t\t\t\tif( astTreeMessage.movingTreeNode ){\n\t\t\t\t\tastTreeMessage.cloneNode.style.top = `${e.clientY - this.y - this.offsetY + this.$refs.astTree.scrollTop}px`;\n\t\t\t\t\tastTreeMessage.cloneNode.style.left = `${e.clientX - this.x}px`;\n\t\t\t\t}\n\t\t\t},\n\t\t\tendMoveNode(e){\n\t\t\t\t// console.log(\"e:\", e.type);\n\t\t\t\tthis.$emit('endMoveNode');\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\tastTreeMessage.root = this;\n\n\t\t\tthis.$on('startMoveNode', function(e, treeNode){\n\t\t\t\t// console.log('startMoveNode e:', e);\n\t\t\t\tif( astTreeMessage.movingTreeNode ){\n\t\t\t\t\tif( astTreeMessage.movingTreeNode === treeNode ){\n\t\t\t\t\t\tthis.isMoving = treeNode.$data.isMoving = false;\n\t\t\t\t\t\tthis.$el.removeChild(astTreeMessage.cloneNode);\n\n\t\t\t\t\t\tastTreeMessage.movingTreeNode = astTreeMessage.cloneNode = null;\n\t\t\t\t\t}else{\n\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// console.log(\"treeNode.$refs.node:\", treeNode.$refs.node);\n\t\t\t\t\tastTreeMessage.movingTreeNode = treeNode;\n\t\t\t\t\tlet cloneNode = astTreeMessage.cloneNode = treeNode.$refs.node.cloneNode(true);\n\n\t\t\t\t\tcloneNode.classList.add('moving');\n\n\t\t\t\t\t// console.log(this.$refs.astTree.clientTop);\n\t\t\t\t\t// console.log(e.clientY);\n\n\t\t\t\t\tthis.x = e.clientX;\n\t\t\t\t\tthis.offsetY = e.offsetY;\n\n\t\t\t\t\tcloneNode.style.top = `${e.clientY - this.y - this.offsetY + this.$refs.astTree.scrollTop}px`;\n\t\t\t\t\tcloneNode.style.left = `${e.clientX - this.x}px`;\n\t\t\t\t\tthis.isMoving = astTreeMessage.movingTreeNode.$data.isMoving = true;\n\t\t\t\t\tthis.$el.appendChild(cloneNode);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis.$on('showEndMoveTarget', function(type){\n\t\t\t\tlet { movingTreeNode , moveTargetTreeNode } = astTreeMessage,\n\t\t\t\t\t\t{ index, data } = movingTreeNode;\n\n\t\t\t\tswitch(type){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tif( data.parent.children[index + 1] === moveTargetTreeNode.data ){\n\t\t\t\t\t\t\t// console.log('目标节点的下一个节点就是移动节点');\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = null;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif( movingTreeNode.data.parent === moveTargetTreeNode.data ){\n\t\t\t\t\t\t\t// console.log('移动节点的父节点就是目标节点');\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = null;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tmoveTargetTreeNode.moveInType = null;\n\t\t\t\t\t\tif( data.parent.children[index - 1] === moveTargetTreeNode.data ){\n\t\t\t\t\t\t\t// console.log('目标节点的上一个节点就是移动节点');\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = null;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tmoveTargetTreeNode.moveInType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$on('endMoveNode', function(){\n\t\t\t\tif( astTreeMessage.movingTreeNode ){\n\t\t\t\t\t// console.log(\"endMoveNode\");\n\n\t\t\t\t\tthis.$el.removeChild(astTreeMessage.cloneNode);\n\n\t\t\t\t\tif( astTreeMessage.moveTargetTreeNode ){\n\t\t\t\t\t\tlet moveNode = astTreeMessage.movingTreeNode.data,\n\t\t\t\t\t\t\t\tmoveNodeIndex = astTreeMessage.movingTreeNode.index,\n\t\t\t\t\t\t\t\tendNode = astTreeMessage.moveTargetTreeNode.data,\n\t\t\t\t\t\t\t\tendNodeIndex = astTreeMessage.moveTargetTreeNode.index,\n\t\t\t\t\t\t\t\tmoveInType = astTreeMessage.moveTargetTreeNode.moveInType;\n\n\t\t\t\t\t\t\n\t\t\t\t\t\tastTreeMessage.moveTargetTreeNode.moveInType = null;\n\t\t\t\t\t\tthis.isMoving = astTreeMessage.movingTreeNode.isMoving = false;\n\n\t\t\t\t\t\tastTreeMessage.cloneNode = \n\t\t\t\t\t\tastTreeMessage.movingTreeNode = \n\t\t\t\t\t\tastTreeMessage.moveTargetTreeNode = null;\n\n\t\t\t\t\t\tlet \n\t\t\t\t\t\t\tmoveNodeparentChildren = moveNode.parent.children,\n\t\t\t\t\t\t\tendNodeParentChildren = endNode.parent.children;\n\n\n\t\t\t\t\t\tswitch( moveInType ){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tmoveNodeparentChildren.splice( moveNodeIndex, 1 );\n\t\t\t\t\t\t\t\tmoveNode.parent = endNode.parent;\n\t\t\t\t\t\t\t\tendNodeParentChildren.splice( endNodeIndex, 0, moveNode );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tmoveNodeparentChildren.splice( moveNodeIndex, 1 );\n\t\t\t\t\t\t\t\tmoveNode.parent = endNode;\n\t\t\t\t\t\t\t\tendNode.children.push(moveNode);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tmoveNodeparentChildren.splice( moveNodeIndex, 1 );\n\t\t\t\t\t\t\t\tmoveNode.parent = endNode.parent;\n\t\t\t\t\t\t\t\tendNodeParentChildren.splice( endNodeIndex + 1, 0, moveNode );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.isMoving = astTreeMessage.movingTreeNode.isMoving = false;\n\t\t\t\t\t\tastTreeMessage.movingTreeNode = astTreeMessage.cloneNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});\n\t\t},\n\t\tmounted(){\n\t\t\tthis.y = this.$refs.astTree.getBoundingClientRect().y;\n\t\t}\n\t}\n</script>\n\n<style lang=\"less\">\n\t.component-ast-node-container{\n    position: relative;\n\t\tpadding: 0.1rem 0 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow-y: auto;\n\t\toverflow-x: visible;\n\t\t>.component-ast-node.moving{\n\t\t\tposition: absolute;\n\t\t\topacity: 0.3;\n\t\t\tpointer-events: none;\n\t\t\t>.node-content{\n\t\t\t\tbackground-color: #000000;\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\t\t}\n\t}\n\t.component-ast-node-container[data-move=\"true\"]{\n\t\tcursor: move;\n\t\t.component-ast-node{\n\t\t\t>.node-content{\n\t\t    >.btns{\n\t\t    \tpointer-events: none;\n\t\t    \topacity: 0;\n\t\t    }\n\t\t\t}\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ast_tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ast_tree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ast_tree.vue?vue&type=template&id=62c21b70&\"\nimport script from \"./ast_tree.vue?vue&type=script&lang=js&\"\nexport * from \"./ast_tree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ast_tree.vue?vue&type=style&index=0&id=62c21b70&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div id=\"learnAstNode-codeList\">\n\t\t<div class=\"operation\">\n\t\t\t<div class=\"icon\">\n\t\t\t\t<div class=\"iconfont icon-output\"\n\t\t\t\t\ttitle=\"导出节点\"\n\t\t\t\t\tv-on:mousedown=\"outputAstMessage\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"icon\">\n\t\t\t\t<div class=\"iconfont icon-add\"\n\t\t\t\t\ttitle=\"添加节点\"\n\t\t\t\t\tv-on:mousedown=\"addAstNode\"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"tree\">\n\t\t\t<c-astTree />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport astTree from './ast_tree.vue';\n\timport { getNewNode, outputAstMessage } from '../deal_ast.js';\n\n\texport default {\n\t\tcomponents: {\n\t\t\t'c-astTree': astTree,\n\t\t},\n\t\tinject: ['astMessage'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tastMessage: this.astMessage,\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\toutputAstMessage(){\n\t\t\t\toutputAstMessage(this.astMessage)\n\t\t\t},\n\t\t\taddAstNode(){\n\t\t\t\tlet astTree = this.astMessage.astTree;\n\t\t\t\tastTree.children.push(\n\t\t\t\t\tgetNewNode(`ast节点-${astTree.children.length + 1}`, astTree)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"less\">\n\t#learnAstNode-codeList{\n\t\twidth: 2.5rem;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: #494949;\n    border-right: 0.02rem solid #000000;\n\t\t>.operation{\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row-reverse;\n\t    padding: 0.04rem 0.1rem;\n\t\t\twidth: 100%;\n\t\t\theight: 0.4rem;\n\t\t\t>.icon{\n\t\t\t\tdisplay: flex;\n\t\t\t\tpadding-left: 0.04rem;\n\t\t\t\theight: 100%;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\t>.iconfont{\n\t\t\t\t\twidth: 0.26rem;\n\t\t\t\t\theight: 0.26rem;\n\t\t\t\t\tline-height: 0.26rem;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tborder-radius: 0.04rem;\n\t\t\t\t\tcolor: #ffffff;\n\t\t\t\t\ttransition: background-color .3s;\n\t\t\t\t\t&:hover{\n\t\t\t\t\t\tbackground-color: #333333;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t>.iconfont[data-selected=\"true\"]{\n\t\t\t\t\tbackground-color: #000000;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t>.tree{\n\t\t\tflex: 1;\n\t\t\twidth: 100%;\n\t\t\theight: 0;\n\t\t\tborder-top: 0.02rem solid #000000;\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node_list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node_list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./node_list.vue?vue&type=template&id=2bbe0f58&\"\nimport script from \"./node_list.vue?vue&type=script&lang=js&\"\nexport * from \"./node_list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./node_list.vue?vue&type=style&index=0&id=2bbe0f58&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"learnAstNode-nodeMessages\"}},_vm._l((_vm.astMessage.selectedAstNode),function(message,index){return _c('c-message',{key:message.nodeType,attrs:{\"message\":message}})}),1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"node_message_container\"},[_c('div',{staticClass:\"node_message\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.message.nodeType))]),_c('div',{staticClass:\"icon\"},[_c('div',{staticClass:\"iconfont icon-guanbi\",on:{\"mousedown\":function($event){return _vm.unselectAstNode(_vm.message)}}}),_c('div',{staticClass:\"iconfont icon-bianji\",on:{\"mousedown\":function($event){return _vm.editAstNode(_vm.message)}}})])]),_c('div',{staticClass:\"content\"},[(_vm.message.code || _vm.message.edit)?_c('div',{staticClass:\"code\"},[_c('textarea',{ref:\"code\",on:{\"input\":_vm.changeCodeDebounce}})]):_vm._e(),_c('div',{staticClass:\"json_tree_container\"},[_c('div',{staticClass:\"json_tree\"},[(_vm.ast)?_c('c-jsonTreeNode',{attrs:{\"data\":_vm.ast}}):_vm._e()],1)])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as babelParser from '@babel/parser';\n\n// console.log('babelParser:', babelParser);\n\nexport default function getAst(code){\n\treturn babelParser.parse(code, {\n\t\tsourceType: 'module',\n\t\tstrictMode: false,\n\t\tcreateParenthesizedExpressions: true,\n\t\tallowUndeclaredExports: true,\n\t\tplugins: [\n\t\t\t'decimal',\n\t\t\t'decorators-legacy',\n\t\t\t'recordAndTuple',\n\t\t\t'partialApplication',\n\t\t\t'functionBind',\n\t\t\t'doExpressions',\n\t\t\t'moduleBlocks',\n\t\t\t'flow',\n\t\t\t'importAssertions'\n\n\n\t\t\t// 'syntaxType'\n\n\t\t\t// 'classProperties',\n\t\t\t// 'objectRestSpread',\n\t\t\t// 'jsx',\n\t\t\t// 'typescript',\n\t\t\t// 'asyncGenerators',\n\t\t\t// 'dynamicImport',\n\t\t\t// 'exportDefaultFrom',\n\t\t\t// 'exportNamespaceFrom'\n\t\t]\n\t});\n}","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"component-json-node\"},[_c('div',{staticClass:\"node-content\"},[_c('div',{class:{\n\t\t\t\texpand: true,\n\t\t\t\tleaf: _vm.isLeaf,\n\t\t\t\texpanded: _vm.isExpand && !_vm.isLeaf,\n\t\t\t},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.handleExpand.apply(null, arguments)}}},[_vm._v(\" › \")]),_c('div',{staticClass:\"label\",on:{\"mousedown\":_vm.copyKeyName}},[_vm._v(\" \"+_vm._s(_vm.getLabel())+\" \")])]),(!_vm.isLeaf)?_c('div',{ref:\"children\",staticClass:\"children\"},_vm._l((_vm.data),function(child,name){return ((typeof _vm.data === 'object' && !Array.isArray(_vm.data) && \n\t\t\t\t_vm.data.type && _vm.ast[_vm.data.type] ?\n\t\t\t\t_vm.ast[_vm.data.type][name] : true))?_c('component-json-node',{key:name,attrs:{\"data\":child,\"keyName\":name}}):_vm._e()}),1):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"component-json-node\">\n\t\t<div class=\"node-content\" >\n\t\t\t<div :class=\"{\n\t\t\t\t\texpand: true,\n\t\t\t\t\tleaf: isLeaf,\n\t\t\t\t\texpanded: isExpand && !isLeaf,\n\t\t\t\t}\"\n\t\t\t\tv-on:mousedown.stop=\"handleExpand\"> › </div>\n\t\t\t<div class=\"label\"\n\t\t\t\tv-on:mousedown=\"copyKeyName\">\n\t\t\t\t{{ getLabel() }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"children\"\n\t\t\tref=\"children\"\n\t\t\tv-if=\"!isLeaf\">\n\t\t\t<component-json-node\n\t\t\t\tv-for=\"(child, name) in data\"\n\t\t\t\tv-if=\"(typeof data === 'object' && !Array.isArray(data) && \n\t\t\t\t\tdata.type && ast[data.type] ?\n\t\t\t\t\tast[data.type][name] : true)\"\n\t\t\t\t:key=\"name\"\n\t\t\t\t:data = \"child\"\n\t\t\t\t:keyName=\"name\"\n\t\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport ast from './ast.json';\n\n\texport default {\n\t\tname: 'component-json-node',\n\t\tprops: {\n\t\t\tdata: {\n\t\t\t\ttype: [Object, Array, String, Number, Boolean],\n\t\t\t},\n\t\t\tkeyName: {\n\t\t\t\ttype: [String, Number],\n\t\t\t\tdefault: '',\n\t\t\t}\n\t\t},\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tast,\n\t\t\t\t// isLeaf: null,\n\t\t\t\tisLeaf: this.getIsLeaf(),\n\t\t\t\tisExpand: true,\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tdata(){\n\t\t\t\tthis.isLeaf = this.getIsLeaf();\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\thandleExpand(){\n\t\t\t\tif( this.isLeaf ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.isExpand = !this.isExpand;\n\t\t\t\tlet height ;\n\t\t\t\tif( this.isExpand ){\n\t\t\t\t\tthis.$refs.children.style.height = null;\n\t\t\t\t\theight = this.$refs.children.clientHeight;\n\t\t\t\t\tthis.$refs.children.style.height = 0;\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = `${height}px`;\n\t\t\t\t\t}, 0);\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = null;//\t300 是 css transition 的数据\n\t\t\t\t\t}, 300);\n\t\t\t\t}else{\n\t\t\t\t\theight = this.$refs.children.clientHeight;\n\t\t\t\t\tthis.$refs.children.style.height = `${height}px`;\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.$refs.children.style.height = 0;\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetLabel(){\n\t\t\t\tlet dataLabel = \"\",\n\t\t\t\t\t\tdataType = \"\";\n\t\t\t\t\n\n\t\t\t\tif( typeof this.keyName === \"string\" ){\n\t\t\t\t\tdataLabel = this.keyName;\n\t\t\t\t\tif( this.data && this.data.type ){\n\t\t\t\t\t\tdataLabel += ': ' + this.data.type;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tdataLabel = this.data.type;\n\t\t\t\t}\n\n\t\t\t\tthis.data === null ? dataType = ': null' :\n\t\t\t\tthis.data === void 0 ? dataType = ': undefined' : \n\t\t\t\tArray.isArray(this.data) ? dataType = `-Array [${this.data.length}]` :\n\t\t\t\ttypeof this.data === 'object' ? dataType = `-Object {${Object.keys(this.data).length}}` :\n\t\t\t\tdataType = `: ${this.data}`\n\n\t\t\t\treturn `${dataLabel}${dataType}`;\n\t\t\t},\n\t\t\tcopyKeyName(){\n\t\t\t\tconsole.log('this.data:', this.data);\n\t\t\t\tconsole.log('this.keyName:', this.keyName);\n\t\t\t\tconsole.log('this.data.type:', this.data.type);\n\t\t\t\tlet textarea = document.createElement('textarea');\n\t\t\t\ttextarea.style.position = 'absolute';\n\t\t\t\ttextarea.style.opacity = 0;\n\n\t\t\t\tdocument.body.appendChild(textarea);\n\t\t    textarea.value = this.keyName;\n\t\t    textarea.select();\t\t// 选择对象\n\t\t    document.execCommand(\"Copy\");\t// 执行浏览器复制命令\n\n\t\t\t\tdocument.body.removeChild(textarea);\n\t\t\t},\n\t\t\tgetIsLeaf(){\n\t\t\t\treturn Array.isArray(this.data) ? this.data.length === 0 :\n\t\t\t\t\t\t\t\t((typeof this.data) === \"object\" && this.data !== null) ? Object.keys(this.data) === 0 :\n\t\t\t\t\t\t\t\ttrue\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\t\t// console.log('data:', this.data);\n\t\t\t// console.log(JSON.stringify(this.data, null, 4))\n\t\t\t// console.log('this.keyName:', this.keyName);\n\t\t\t// console.log('this.data:', this.data);\n\t\t\t// for( let key in this.data ){\n\t\t\t// \tconsole.log(`this.data[${key}]:`, this.data[key]);\n\t\t\t// \tconsole.log(`ast[${this.data.type}][${key}]`, ast[this.data.type][key]);\n\t\t\t// }\n\t\t\t// console.log((typeof this.data) !== \"object\");\n\t\t\t// console.log('this.data:', this.data);\n\t\t\t// console.log('this.keyName:', this.keyName);\n\t\t}\n\t}\n</script>\n\n<style lang=\"less\">\n\t.component-json-node{\n\t\t>.node-content{\n\t\t\tposition: relative;\n\t\t\tdisplay: flex;\n\t\t\theight: 0.3rem;\n\t\t\tline-height: 0.3rem;\n\t\t\tfont-size: 0.14rem;\n\t\t\ttransition: background-color .3s, height .3s;\n\t    cursor: pointer;\n\t    >.expand{\n\t    \twidth: 0.3rem;\n\t    \theight: 0.3rem;\n\t\t    text-align: center;\n        transition: transform .3s ease-in-out, opacity .3s ease-in-out, width .3s;\n\t    }\n\t    >.expand.expanded{\n\t\t    transform: rotate(90deg);\n\t    }\n\t    >.expand.leaf{\n\t    \topacity: 0;\n\t    \tpointer-events: none;\n\t\t    transform: rotate(90deg);\n\t    }\n\t    >.label{\n\t\t\t\tline-height: 0.3rem;\n\t\t\t\twhite-space:nowrap;\n\t    }\n\t\t}\n\t\t>.node-content[data-selected=\"true\"]{\n\t\t\tbackground-color: #272727;\n\t    >.btns{\n\t    \tbackground-color: #272727;\n\t    }\n\t\t}\n\t\t>.node-content[data-hide=\"true\"]{\n\n\t\t\theight: 0;\n\t\t}\n\t\t>.children{\n\t\t\tmargin: 0 0 0 0.16rem;\n\t\t\ttransition: height .3s;\n\t    border-left: 0.01rem solid #666666;\n\t    overflow-y: hidden;\n\t    overflow-x: initial;\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./json_tree_node.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./json_tree_node.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./json_tree_node.vue?vue&type=template&id=e0bf74d6&\"\nimport script from \"./json_tree_node.vue?vue&type=script&lang=js&\"\nexport * from \"./json_tree_node.vue?vue&type=script&lang=js&\"\nimport style0 from \"./json_tree_node.vue?vue&type=style&index=0&id=e0bf74d6&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div class=\"node_message_container\">\n\t\t<div class=\"node_message\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<div class=\"title\">{{message.nodeType}}</div>\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<div class=\"iconfont icon-guanbi\"\n\t\t\t\t\t\tv-on:mousedown=\"unselectAstNode(message)\"></div>\n\t\t\t\t\t<div class=\"iconfont icon-bianji\"\n\t\t\t\t\t\tv-on:mousedown=\"editAstNode(message)\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"code\"\n\t\t\t\t\tv-if=\"message.code || message.edit\">\n\t\t\t\t\t<textarea ref=\"code\"\n\t\t\t\t\t\tv-on:input=\"changeCodeDebounce\"></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"json_tree_container\">\n\t\t\t\t\t<div class=\"json_tree\">\n\t\t\t\t\t\t<c-jsonTreeNode\n\t\t\t\t\t\t\tv-if=\"ast\"\n\t\t\t\t\t\t\t:data=\"ast\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport getAst from './parse.js';\n\timport jsonTreeNode from './json_tree_node.vue';\n\timport debounce from '../../../utils/timer/debounce.js';\n\n\texport default {\n\t\tcomponents: {\n\t\t\t'c-jsonTreeNode': jsonTreeNode,\n\t\t},\n\t\tinject: ['astMessage'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tast: null,\n\t\t\t}\n\t\t},\n\t\tprops: {\n\t\t\tmessage: {\n\t\t\t\ttype: Object\n\t\t\t},\n\t\t},\n\t\tmethods: {\n\t\t\tchangeCodeDebounce: debounce(function(){\n\t\t\t\tthis.message.code = this.$refs.code.value;\n\t\t\t\ttry{\n\t\t\t\t\tthis.ast = getAst(this.message.code);\n\t\t\t\t\t// console.info('ast:', JSON.stringify(this.ast, null, 4));\n\t\t\t\t}catch(e){\n\t\t\t\t\tthis.ast = null;\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t}, 2000),\n\t\t\tunselectAstNode(node){\n\t\t\t\t// console.log(\"unselectAstNode\");\n\t\t\t\tlet index = this.astMessage.selectedAstNode.indexOf(node);\n\t\t\t\tthis.astMessage.selectedAstNode.splice(index, 1);\n\t\t\t\tnode.selected = false;\n\t\t\t\t// console.log('index:', index);\n\t\t\t},\n\t\t\teditAstNode(node){\n\t\t\t\t// console.log(\"editAstNode\");\n\t\t\t\t// this.$set(node, 'edit', !node.edit);\n\t\t\t\tif(!node.code){\n\t\t\t\t\tnode.edit = !node.edit;\n\t\t\t\t}\n\t\t\t\t// console.log('edit:', node.edit);\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\t// console.log('message:', this.message);\n\t\t\tif( this.message.code ){\n\t\t\t\tthis.$refs.code.value = this.message.code;\n\t\t\t}\n\t\t\tthis.ast = getAst(this.message.code);\n\t\t}\n\t}\n</script>\n\n<style lang=\"less\">\n\t.node_message_container{\n\t\tpadding: 0.18rem;\n\t\twidth: 100%;\n\t\tmin-width: 5rem;\n\t\t>.node_message{\n\t\t\tpadding: 0.04rem 0.1rem;\n\t\t\twidth: 100%;\n\t\t\tborder-radius: 0.04rem;\n\t\t\tbox-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\t\t\t>.header{\n\t\t\t\tposition: relative;\n\t\t\t\tdisplay: flex;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 0.3rem;\n\t\t\t\t>.title{\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tline-height: 0.3rem;\n\t\t\t\t\tfont-size: 0.16rem;\n\t\t\t\t}\n\t\t\t\t>.icon{\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tflex-direction: row-reverse;\n\t\t\t\t\theight: 0.3rem;\n\t\t\t\t\tline-height: 0.3rem;\n\t\t\t\t\t>.iconfont{\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tmargin: 0 0 0 0.06rem;\n\t\t\t\t\t\twidth: 0.2rem;\n\t\t\t\t\t\theight: 0.2rem;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t>.content{\n\t\t\t\tdisplay: flex;\n\t\t\t\twidth: 100%;\n\t\t\t\tborder-top: 0.01rem solid #b6b6b6;\n\t\t\t\theight: fit-content;\n\t\t\t\t//transition: height .3s;\n\t\t\t\t>.code{\n\t\t\t\t\tpadding: 0.1rem;\n\t\t\t\t\twidth: 50%;\n\t\t\t\t\t//height: 100%;\n\t\t\t    min-height: 100%;\n\t\t\t\t\t>textarea{\n\t\t\t\t\t\tpadding: 0.1rem;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tresize: none;\n\t\t\t\t\t\tborder-width: 0.02rem;\n\t\t\t\t\t\tborder-style: dashed;\n\t\t\t\t\t\tborder-color: #434343;\n\t\t\t\t\t\tborder-radius: 0.04rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t>.json_tree_container{\n\t\t\t\t\tpadding: 0.1rem;\n\t\t\t\t\twidth: 50%;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\t>.json_tree{\n\t\t\t\t\t\twidth: fit-content;\n\t\t\t\t\t\tmin-width: 100%;\n\t\t\t\t\t\theight: fit-content;\n\t\t\t\t\t\tmax-height: 3rem;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./message.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./message.vue?vue&type=template&id=7e026043&\"\nimport script from \"./message.vue?vue&type=script&lang=js&\"\nexport * from \"./message.vue?vue&type=script&lang=js&\"\nimport style0 from \"./message.vue?vue&type=style&index=0&id=7e026043&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div id=\"learnAstNode-nodeMessages\">\n\t\t<c-message \n\t\t\tv-for=\"(message, index) in astMessage.selectedAstNode\"\n\t\t\t:key=\"message.nodeType\"\n\t\t\t:message=\"message\"/>\n\t</div>\n</template>\n\n<script>\n\timport message from './message.vue';\n\n\texport default {\n\t\tcomponents: {\n\t\t\t\"c-message\": message,\n\t\t},\n\t\tinject: ['astMessage'],\n\t}\n\n</script>\n\n<style lang=\"less\">\n\t#learnAstNode-nodeMessages{\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n    justify-content: flex-start;\n    align-content: flex-start;\n\t\tflex: 1;\n\t\twidth: 0;\n\t\theight: 100%;\n\t\toverflow-y: auto;\n\t\t>.node_message_container{\n\n\t\t}\n\t}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node_message.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node_message.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./node_message.vue?vue&type=template&id=2632c970&\"\nimport script from \"./node_message.vue?vue&type=script&lang=js&\"\nexport * from \"./node_message.vue?vue&type=script&lang=js&\"\nimport style0 from \"./node_message.vue?vue&type=style&index=0&id=2632c970&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div id=\"learnAstNode\">\n\t\t<div class=\"header\">\n\t\t\t<div class=\"title\">\n\t\t\t\t<div class=\"iconfont icon-jiedianguanli\"></div>\n\t\t\t\t<div class=\"text\" >Ast 节点学习</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"main\">\n\t\t\t<v-nodeList/>\n\t\t\t<v-nodeMessage/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\t// import getAst from './node_message/parse.js';\n\timport nodeList from './node_list/node_list.vue';\n\timport nodeMessage from './node_message/node_message.vue';\n\n\timport astMessage from './astMessage.json';\n\timport { initAstMessageJson } from './deal_ast.js';\n\n\texport default {\n\t\tcomponents: {\n\t\t\t\"v-nodeList\": nodeList,\n\t\t\t\"v-nodeMessage\": nodeMessage,\n\t\t},\n\t\tprovide: {\n\t\t\tastMessage: initAstMessageJson(astMessage)\n\t\t},\n\t}\n</script>\n\n<style lang=\"less\">\n\t#learnAstNode{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\t>.header{\n\t\t\tdisplay: flex;\n\t\t\theight: 0.5rem;\n\t\t\tbackground-color: #24292f;\n\t\t\t>.title{\n\t\t\t\tdisplay: flex;\n\t\t\t\tpadding-left: 0.1rem;\n\t\t\t\tflex: 1;\n\t\t\t\theight: 100%;\n\t\t\t\t>div{\n\t\t\t\t\tcolor: #ffffff;\n\t\t\t\t\tline-height: 0.5rem;\n\t\t\t\t}\n\t\t\t\t>.iconfont{\n\t\t\t\t\tfont-size: 0.16rem;\n\t\t\t\t}\n\t\t\t\t>.text{\n\t\t\t\t\tpadding-left: 0.08rem;\n\t\t\t\t\tfont-size: 0.14rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t>.main{\n\t\t\tdisplay: flex;\n\t\t\theight: 0;\n\t\t\tflex: 1;\n\t\t\t>.item{\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t}\n\n\t}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./learn_ast_node.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./learn_ast_node.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./learn_ast_node.vue?vue&type=template&id=5430b222&\"\nimport script from \"./learn_ast_node.vue?vue&type=script&lang=js&\"\nexport * from \"./learn_ast_node.vue?vue&type=script&lang=js&\"\nimport style0 from \"./learn_ast_node.vue?vue&type=style&index=0&id=5430b222&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 抄自 https://github.com/tweenjs/tween.js/blob/master/src/Now.ts\nlet now;\n\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n\tnow = function () {\n\t\t// eslint-disable-next-line\n\t\t// @ts-ignore\n\t\tvar time = process.hrtime();\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tnow = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tnow = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tnow = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\nexport default now","import getNow from './basic/now.js';\n/**\n * underscore 防抖函数，返回函数连续调用时，空闲时间必须大于或等于 wait，func 才会执行\n *\n * @param  {function} func        回调函数\n * @param  {number}   wait        表示时间窗口的间隔\n * @param  {boolean}  immediate   设置为ture时，是否立即调用函数\n * @return {function}             返回客户调用函数\n */\nexport default function debounce(func, wait, immediate = false) {\n\tlet timeout, args, context, timestamp, result;\n \n \tfunction run() {\n\t\t// 现在和上一次时间戳比较\n\t\tlet last = getNow() - timestamp;\n\t\t// 如果当前间隔时间少于设定时间且大于0就重新设置定时器\n\t\tif (last < wait && last >= 0) {\n\t\t\ttimeout = setTimeout(run, wait - last);\n\t\t} else {\n\t\t\t// 否则的话就是时间到了执行回调函数\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) {\n\t\t\t\tresult = func.apply(context, args);\n\t\t\t\tcontext = args = null;\n\t\t\t}\n\t\t}\n\t};\n \n\tfunction debounce() {\n\t\tcontext = this;\n\t\targs = arguments;\n\t\t// 设置最近一次函数触发的时间戳\n\t\ttimestamp = getNow();\n\t\t// 如果定时器不存在且立即执行函数\n\t\tlet callNow = immediate && !timeout;\n\t\t// 如果定时器不存在就创建一个\n\t\tif (!timeout) {\n\t\t\ttimeout = setTimeout(run, wait);\n\t\t}\n\t\tif (callNow) {\n\t\t\t// 如果需要立即执行函数的话 通过 apply 执行\n\t\t\tresult = func.apply(context, args);\n\t\t\tcontext = args = null;\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn debounce;\n};","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n\nvar ParseErrorCode = {\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n};\n\nconst reflect = (keys, last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n\n  set(value) {\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\n  }\n\n});\n\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\n  value: descriptor,\n  enumerable: false\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\n  configurable: true\n}, descriptor)), Object.assign(new constructor(), properties));\n\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  }\n};\n\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\n\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\n\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\n\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\n\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\n\nconst _excluded$1 = [\"toMessage\"],\n      _excluded2$1 = [\"message\"];\n\nfunction toParseErrorConstructor(_ref) {\n  let {\n    toMessage\n  } = _ref,\n      properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  return function constructor({\n    loc,\n    details\n  }) {\n    return instantiate(SyntaxError, Object.assign({}, properties, {\n      loc\n    }), {\n      clone(overrides = {}) {\n        const loc = overrides.loc || {};\n        return constructor({\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\n          details: Object.assign({}, this.details, overrides.details)\n        });\n      },\n\n      details: {\n        value: details,\n        enumerable: false\n      },\n      message: {\n        get() {\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\n        },\n\n        set(value) {\n          Object.defineProperty(this, \"message\", {\n            value\n          });\n        }\n\n      },\n      pos: {\n        reflect: \"loc.index\",\n        enumerable: true\n      },\n      missingPlugin: \"missingPlugin\" in details && {\n        reflect: \"details.missingPlugin\",\n        enumerable: true\n      }\n    });\n  };\n}\n\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {};\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n\n    const _ref2 = typeof template === \"string\" ? {\n      message: () => template\n    } : typeof template === \"function\" ? {\n      message: template\n    } : template,\n          {\n      message\n    } = _ref2,\n          rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\n\nconst {\n  defineProperty\n} = Object;\n\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\n\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\n\nvar estree = (superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n\n    return file;\n  }\n\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(unfinished) {\n    const node = super.parseExport(unfinished);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    super.resetStartLocation(node, start, startLoc);\n    toESTreeLocation(node);\n  }\n\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\n\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 128;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 128;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 132;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 125 && token <= 127;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 117 && token <= 119;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 120 && token <= 126;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[138].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b0000001000000,\n      BIND_FLAGS_CLASS = 0b0000010000000,\n      BIND_FLAGS_TS_ENUM = 0b0000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b0001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b0010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b0100000000000,\n      BIND_FLAGS_TS_IMPORT = 0b1000000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n\n      const actualOptions = this.plugins.get(pluginName);\n\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n\n}\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 135;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    const ch = input.charCodeAt(pos);\n\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\n\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n\n  return ch === (type === \"double\" ? 34 : 39);\n}\n\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n\n  const ch = input.charCodeAt(pos++);\n\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n\n    case 114:\n      return res(\"\\r\");\n\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n\n    case 116:\n      return res(\"\\t\");\n\n    case 98:\n      return res(\"\\b\");\n\n    case 118:\n      return res(\"\\u000b\");\n\n    case 102:\n      return res(\"\\f\");\n\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n\n    case 10:\n      lineStart = pos;\n      ++curLine;\n\n    case 8232:\n    case 8233:\n      return res(\"\");\n\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n\n  return {\n    code: n,\n    pos\n  };\n}\n\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      ++pos;\n      continue;\n    }\n\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n\n    ++pos;\n    total = total * radix + val;\n  }\n\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n\n  return {\n    code,\n    pos\n  };\n}\n\nconst _excluded = [\"at\"],\n      _excluded2 = [\"at\"];\n\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(135);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(134, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(134, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n\n      if (lookaheadCh === 94) {\n        throw this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n\n      this.finishOp(51, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n\n    this.finishOp(47, 1);\n  }\n\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n\n      this.finishOp(52, size);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n\n    this.finishOp(48, 1);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        this.readTemplateToken();\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n        this.readToken_lt();\n        return;\n\n      case 62:\n        this.readToken_gt();\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(36, 1);\n        return;\n\n      case 64:\n        this.readToken_atSign();\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(133, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(131, str);\n      return;\n    }\n\n    this.finishToken(130, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(131, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(132, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(130, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(129, str);\n  }\n\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(128, word);\n    }\n  }\n\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n\n  raise(toParseError, raiseProperties) {\n    const {\n      at\n    } = raiseProperties,\n          details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n      at\n    } = raiseProperties,\n          details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  updateContext(prevType) {}\n\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, loc) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.parser.raise(toParseError, origin);\n  }\n\n  recordArrowParemeterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n\n      throw this.unexpected(null, token);\n    }\n  }\n\n  canInsertSemicolon() {\n    return this.match(135) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, endLoc) {\n\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== 129 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(107);\n\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(123)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(126)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(127)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(125)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(129)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(83)) {\n        this.next();\n\n        if (!this.isContextual(126) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(121, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(126) || this.isContextual(125)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(127)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(125) || this.isContextual(126) || this.isContextual(127)) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(108);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n\n    if (this.isContextual(114)) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    if (this.isContextual(110)) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(126);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.match(47) || this.match(138)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(125);\n    node.extends = [];\n\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(130) || this.match(129) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(10);\n\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(115)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(104)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(98) || this.isContextual(103)) {\n          const lookahead = this.lookahead();\n\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(17)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(17)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 10:\n        this.next();\n\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 129:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(130)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(131)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n\n        throw this.unexpected();\n\n      case 130:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case 131:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      case 87:\n        return this.flowParseTypeofType();\n\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(125)) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 128 && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(53)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.isContextual(125)) {\n      const lookahead = this.lookahead();\n\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(122)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 122) {\n      return !this.state.containsEsc;\n    }\n\n    return super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 122) {\n      return this.state.containsEsc;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(122)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(126)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(127)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(125)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(122)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n\n    if (this.isContextual(126) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n\n    if (this.isContextual(121)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n\n    this.finishToken(128, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n\n    super.toAssignable(node, isLHS);\n  }\n\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(110)) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n\n    const result = super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n\n    return result;\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(87)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(126)) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n\n      if (kind === \"type\" && type === 55) {\n        this.unexpected(null, lh.type);\n      }\n\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(138) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n\n    return super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition()\n        });\n      }\n\n      this.state.pos = end + 2 + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n      at: node,\n      enumName\n    });\n  }\n\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n\n    const endOfInit = () => this.match(12) || this.match(8);\n\n    switch (this.state.type) {\n      case 130:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n\n      case 129:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(101)) return null;\n\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n\n    const {\n      value\n    } = this.state;\n    this.next();\n\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n\n    return value;\n  }\n\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(138);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(137, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(129, out);\n  }\n\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n\n    this.state.pos = startPos;\n    return \"&\";\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(136, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(136)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n\n        return node;\n\n      case 138:\n      case 129:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc.index, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.eat(139)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(56) && !this.match(139)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(139);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.eat(139)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(139);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 138:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case 137:\n            children.push(this.parseExprAtom());\n            break;\n\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(137)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(138)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(138);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n\n  getTokenFromCode(code) {\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(139);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(138);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === 56 && prevType === 138) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 138) {\n      context.push(types.j_oTag);\n    } else if (type === 139) {\n      const out = context[context.length - 1];\n\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags) {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  declareName(name, bindingType, loc) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n\n}\n\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({\n    name\n  }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nvar typescript = (superClass => class TypeScriptParserMixin extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(134) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers({\n    modified,\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n\n      case \"HeritageClauseElement\":\n        return this.match(5);\n\n      case \"TupleElementTypes\":\n        return this.match(3);\n\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      trailingCommaPos = -1;\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(12);\n      }\n\n      return undefined;\n    }\n\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n\n    if (!this.match(129)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseInOutModifiers(node) {\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n\n  tsParseNoneModifiers(node) {\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n  }\n\n  tsParseTypeParameter(parseModifiers = this.tsParseNoneModifiers.bind(this)) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n\n    if (this.match(47) || this.match(138)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type !== 75) return null;\n    this.next();\n    const typeReference = this.tsParseTypeReference();\n\n    if (typeReference.typeParameters) {\n      this.raise(TSErrors.CannotFindName, {\n        at: typeReference.typeName,\n        name: \"const\"\n      });\n    }\n\n    return typeReference;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return super.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type: pattern.type\n        });\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n\n    return false;\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers({\n      modified: node,\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    });\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    super.parsePropertyName(node);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(53)) {\n      return this.isContextual(118);\n    }\n\n    if (this.isContextual(118)) {\n      this.next();\n    }\n\n    if (!this.match(0)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(58);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(118);\n    } else if (this.eatContextual(118)) {\n      node.readonly = true;\n    }\n\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      const {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n      let checkType = type;\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        checkType = elementNode.type;\n      }\n\n      const isLabeled = checkType === \"TSNamedTupleMember\";\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n          at: elementNode\n        });\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 130:\n        case 131:\n        case 129:\n        case 85:\n        case 86:\n          return super.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(113) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 129:\n      case 130:\n      case 131:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== 130 && nextToken.type !== 131) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case 87:\n        return this.tsParseTypeQuery();\n\n      case 83:\n        return this.tsParseImportType();\n\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case 0:\n        return this.tsParseTupleType();\n\n      case 10:\n        return this.tsParseParenthesizedType();\n\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n\n      default:\n        {\n          const {\n            type\n          } = this.state;\n\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(112);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(112) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n\n      try {\n        super.parseBindingList(3, 93, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n\n      if (this.match(11)) {\n        this.next();\n\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(113) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 106) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(120) && this.lookahead().type === 77;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n\n    return delimitedList;\n  }\n\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(125);\n    if (properties.declare) node.declare = true;\n\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n      this.expect(29);\n\n      if (this.isContextual(111) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(129) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(122);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.next();\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(109)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(129)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(116) && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(116);\n    this.expect(10);\n\n    if (!this.match(129)) {\n      throw this.unexpected();\n    }\n\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(99)) {\n      starttype = 74;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      if (starttype === 68) {\n        nany.declare = true;\n        return super.parseFunctionStatement(nany, false, true);\n      }\n\n      if (starttype === 80) {\n        nany.declare = true;\n        return this.parseClass(nany, true, false);\n      }\n\n      if (starttype === 122) {\n        return this.tsParseEnumDeclaration(nany, {\n          declare: true\n        });\n      }\n\n      if (starttype === 109) {\n        return this.tsParseAmbientExternalModuleDeclaration(nany);\n      }\n\n      if (starttype === 75 || starttype === 74) {\n        if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n          nany.declare = true;\n          return this.parseVarStatement(nany, kind || this.state.value, true);\n        }\n\n        this.expect(75);\n        return this.tsParseEnumDeclaration(nany, {\n          const: true,\n          declare: true\n        });\n      }\n\n      if (starttype === 125) {\n        const result = this.tsParseInterfaceDeclaration(nany, {\n          declare: true\n        });\n        if (result) return result;\n      }\n\n      if (tokenIsIdentifier(starttype)) {\n        return this.tsParseDeclaration(nany, this.state.value, true);\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(129)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.match(47)) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return super.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) {\n      return undefined;\n    }\n\n    return this.tsParseTypeArguments();\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    }\n\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers({\n        modified,\n        allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n      });\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(TSErrors.UnexpectedParameterModifier, {\n          at: startLoc\n        });\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n\n        const tokenType = this.state.type;\n\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n\n        return result;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewCallee(node) {\n    var _callee$extra;\n\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(93)) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(126) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(83)) {\n      this.next();\n\n      if (this.isContextual(126) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(124);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(126) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(120) && this.lookahead().type === 80;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n\n    if (this.match(125)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (init.type !== \"StringLiteral\" && init.type !== \"BooleanLiteral\" && init.type !== \"NumericLiteral\" && init.type !== \"BigIntLiteral\" && (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) && !isPossiblyLiteralEnum(init)) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n\n    return declaration;\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n\n    if (this.isContextual(122)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n\n    if (this.isContextual(125)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      modified: member,\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(121)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(121);\n\n    if (isDeclare && (this.isContextual(121) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(110)) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers.bind(this));\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(35)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n\n    const {\n      declare = false,\n      kind\n    } = method;\n\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n\n    if (this.eatContextual(110)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(138) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParemeterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n\n        this.toAssignable(node.expression, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(null, 10);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    } else {\n      return super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(48, 1);\n      }\n\n      if (code === 60) {\n        return this.finishOp(47, 1);\n      }\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n\n    return type;\n  }\n\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(125)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n  }\n\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n    }\n  }\n\n});\n\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = (superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(140)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(140);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(140, 2);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(99)) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === 140) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(81) || this.match(140) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node);\n\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(140), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(node);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(97);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n\n});\n\nvar v8intrinsic = (superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n\n});\n\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n\n      if (pluginName !== expectedName) {\n        return false;\n      }\n\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n\n          this.toAssignable(value, isLHS);\n          break;\n        }\n\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      start: startPos,\n      startLoc\n    } = this.state;\n\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 134) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    prop.method = false;\n    return this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n\n  checkLVal(expression, {\n    in: ancestor,\n    binding = BIND_NONE,\n    checkClashes = false,\n    strictModeChanged = false,\n    allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged, allowingSloppyLetBinding);\n      const {\n        name\n      } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(expression.type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n\n    if (validity === false) {\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor: ancestor.type === \"UpdateExpression\" ? {\n          type: \"UpdateExpression\",\n          prefix: ancestor.prefix\n        } : {\n          type: ancestor.type\n        }\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = expression.type === \"ArrayPattern\" || expression.type === \"ObjectPattern\" || expression.type === \"ParenthesizedExpression\" ? expression : ancestor;\n\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n\n  checkIdentifier(at, bindingType, strictModeChanged = false, allowLetBinding = !(bindingType & BIND_SCOPE_LEXICAL)) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(135)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(12)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(105)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    const {\n      type\n    } = this.state;\n\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startPos) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startPos) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startPos) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(134) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n\n        this.next();\n\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n\n        return this.parseExprOp(finishedNode, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(105)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(34);\n    const node = this.startNode();\n\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === 18) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(134)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    const {\n      type\n    } = this.state;\n\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n\n      case 83:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(10)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case 130:\n        return this.parseNumericLiteral(this.state.value);\n\n      case 131:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case 132:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case 129:\n        return this.parseStringLiteral(this.state.value);\n\n      case 84:\n        return this.parseNullLiteral();\n\n      case 85:\n        return this.parseBooleanLiteral(true);\n\n      case 86:\n        return this.parseBooleanLiteral(false);\n\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n\n      case 26:\n        this.parseDecorators();\n\n      case 80:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case 77:\n        return this.parseNewOrNewTarget();\n\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n\n      case 134:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(123) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n\n    }\n  }\n\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n\n      case \"smart\":\n        return tokenType === 27;\n\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart, this.state.start + 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n\n      if (this.match(102)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(100)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(21)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(startPos, startLoc, val);\n  }\n\n  wrapParenthesis(startPos, startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n      this.takeSurroundingComments(expression, startPos, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    this.parseNewCallee(node);\n\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: node.callee\n      });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc\n      });\n    } else if (this.eat(18)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc\n      });\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(elemStart, createPositionWithColumnOffset(startLoc, 1));\n\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 130:\n            key = this.parseNumericLiteral(value);\n            break;\n\n          case 129:\n            key = this.parseStringLiteral(value);\n            break;\n\n          case 131:\n            key = this.parseBigIntLiteral(value);\n            break;\n\n          case 132:\n            key = this.parseDecimalLiteral(value);\n            break;\n\n          case 134:\n            {\n              const privateKeyLoc = this.state.startLoc;\n\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n\n              key = this.parsePrivateName();\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      prop.key = key;\n\n      if (type !== 134) {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(128);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 133 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n\n      switch (this.state.type) {\n        case 13:\n        case 135:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startPos, startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startPos, startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.expect(5);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(8);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n  parsePropertyNamePrefixOperator(prop) {}\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n\n    if (typeof type === \"number\") {\n      {\n        if (type === 134) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(128),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = 135, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n\n    if (end === 135) {\n      this.next();\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(99)) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(26)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = 74;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n\n      case 64:\n        return this.parseDebuggerStatement(node);\n\n      case 90:\n        return this.parseDoStatement(node);\n\n      case 91:\n        return this.parseForStatement(node);\n\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, {\n              at: this.state.startLoc\n            });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, {\n              at: this.state.startLoc\n            });\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case 80:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case 69:\n        return this.parseIfStatement(node);\n\n      case 70:\n        return this.parseReturnStatement(node);\n\n      case 71:\n        return this.parseSwitchStatement(node);\n\n      case 72:\n        return this.parseThrowStatement(node);\n\n      case 73:\n        return this.parseTryStatement(node);\n\n      case 75:\n      case 74:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case 92:\n        return this.parseWhileStatement(node);\n\n      case 76:\n        return this.parseWithStatement(node);\n\n      case 5:\n        return this.parseBlock();\n\n      case 13:\n        return this.parseEmptyStatement(node);\n\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === 83) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(26)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.match(10)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n\n          if (this.match(134)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(99);\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(74) || this.match(75) || isLet) {\n      const initNode = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if ((this.match(58) || this.isContextual(101)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(101);\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(66) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true\n    });\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(5);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    this.next();\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\n    });\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(55) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc\n      });\n    }\n\n    node.generator = this.eat(55);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n\n  isClassMethod() {\n    return this.match(10);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n\n          continue;\n        }\n\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(104);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(134);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(134);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(134);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(134);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(134);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n\n    if ((type === 128 || type === 129) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n\n    if (type === 134) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.next();\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n  }\n\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n    }\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(65)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, 5);\n  }\n\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(68) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    }\n\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 99) {\n        return false;\n      }\n\n      if ((type === 126 || type === 125) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(97)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, {\n        at: node\n      });\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const isMaybeTypeOnly = this.isContextual(126);\n      const isString = this.match(129);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n\n  parseModuleExportName() {\n    if (this.match(129)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n\n    return false;\n  }\n\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(129)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(97);\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(129)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: specifier,\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(8)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(129)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(14);\n\n      if (!this.match(129)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n\n      attributes.add(node.key.name);\n      this.expect(14);\n\n      if (!this.match(129)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(129);\n      const isMaybeTypeOnly = this.isContextual(126);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nconst tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n"],"names":["render","_vm","this","_c","_self","attrs","_m","staticClass","staticRenderFns","_v","on","outputAstMessage","addAstNode","ref","isMoving","moveNode","endMoveNode","_l","astMessage","astTree","children","child","index","key","class","moveInType","data","selected","handleMouseenterContent","handleMouseleaveContent","handleMousemoveContent","$event","stopPropagation","handleMousedownContent","apply","arguments","expand","leaf","isLeaf","expanded","isExpand","handleExpand","span","move_in","isEditing","editKeydown","editPaste","finishEdit","_s","nodeType","startMoveNode","editNode","addChildNode","deleteNode","_e","getNewNode","parent","node","code","edit","Object","defineProperty","value","enumerable","writable","dealedMessage","eleLink","document","createElement","download","style","display","blob","Blob","JSON","stringify","href","URL","createObjectURL","body","appendChild","click","removeChild","initAstMessageJson","json","selectedAstNode","stack","length","treeNode","pop","forEach","push","root","movingTreeNode","cloneNode","moveTargetTreeNode","paste","div","e","preventDefault","range","selection","getSelection","type","getRangeAt","startContainer","endContainer","Error","string","clipboardData","window","getData","replace","text","createTextNode","$refs","label","setStart","setEnd","childNodes","collapsed","insertData","startOffset","replaceData","endOffset","startEdit","createRange","Node","TEXT_NODE","removeAllRanges","addRange","console","log","keydown","callback","keyCode","getValue","nodeValue","name","props","inject","watch","methods","height","setTimeout","parentChildren","astTreeMessage","created","mounted","destroyed","component","components","x","y","offsetY","moveNodeIndex","endNode","endNodeIndex","moveNodeparentChildren","endNodeParentChildren","message","unselectAstNode","editAstNode","changeCodeDebounce","ast","getAst","babelParser","sourceType","strictMode","createParenthesizedExpressions","allowUndeclaredExports","plugins","copyKeyName","getLabel","Array","isArray","keyName","default","dataType","dataLabel","textarea","getIsLeaf","provide","now","self","process","hrtime","time","undefined","performance","bind","Date","getTime","debounce","func","wait","immediate","timeout","args","context","timestamp","result","run","last","getNow","callNow","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","keys","indexOf","Position","constructor","line","col","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","SyntaxError","SourceTypeModuleError","reflect","get","reduce","object","set","item","instantiate","properties","descriptors","map","filter","descriptor","assign","split","instance","configurable","ModuleErrors","ImportMetaOutsideModule","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","prefix","String","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictModeErrors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","_excluded$1","_excluded2$1","toParseErrorConstructor","_ref","toMessage","loc","details","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","parseErrorTemplates","ParseErrorConstructors","reasonCode","template","_ref2","rest","Errors","toUnenumerable","toESTreeLocation","estree","superClass","parse","file","super","options","tokens","parseRegExpLiteral","pattern","flags","regex","RegExp","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","bigint","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","expression","raw","extra","expressionValue","stmt","rawValue","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","params","isValidDirective","_stmt$expression$extr","parenthesized","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","getPluginOption","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","id","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","startLoc","refExpressionErrors","isValidLVal","isUnparenthesizedInAssign","binding","isAssignable","isBinding","toAssignable","isLHS","classScope","usePrivateName","toAssignableObjectExpressionProp","isLast","raise","at","finishCallExpression","unfinished","optional","callee","_node$arguments$","hasPlugin","attributes","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","state","optionalChainMember","substring","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","finishNodeAt","endLoc","resetStartLocation","resetEndLocation","lastTokEndLoc","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","postfix","ExportedTokenType","conf","rightAssociative","binop","updateContext","keywords$1","Map","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","next2","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_FLAGS_TS_IMPORT","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_TS_TYPE_IMPORT","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","pluginName","pluginOptions","actualOptions","plugin","_this$plugins$get","setTrailingComments","comments","trailingComments","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","commentStart","input","charCodeAt","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","State","curLine","lineStart","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","startLine","startColumn","curPosition","skipArrays","val","slice","_isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","match","octalStr","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","Infinity","invalidDigit","prev","Number","isNaN","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_excluded","_excluded2","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","lookaheadCh","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","raiseProperties","error","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","oldClassScope","from","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParemeterBindingError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","ranges","NodePrototype","prototype","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","__clone","newNode","NodeUtils","startNodeAt","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flow","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","_node$extra","toAssignableList","trailingCommaLoc","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","left","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","close","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","_jsx","jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","strictModeChanged","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","isConst","wasConst","getOwn$1","hasOwnProperty","nonNull","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","CannotFindName","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","tsIsVarianceAnnotations","typescript","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsParseModifiers","modified","disallowedModifiers","errorTemplate","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","element","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseInOutModifiers","tsParseNoneModifiers","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","typeReference","tsFillSignature","returnToken","signature","returnTokenRequired","paramsKey","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","parseObjectLike","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","checkIdentifier","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","isSimpleParameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","expressions","isPossiblyLiteralEnum","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","isIdentifier","parseClassPropertyAnnotation","definite","declareClassPrivateMethodInScope","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","checkToRestConversion","allowPattern","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSTypeAssertion","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","kindKey","isUncomputedMemberExpressionChain","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","isBreak","parseBlock","createNewLexicalScope","parseFunctionId","requireId","takeDecorators","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","identifier","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","moduleAttributesVersionPluginOption","missingPlugins","mixinPlugins","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","getOptions","opts","getOwn","unwrapParenthesizedExpression","LValParser","_node$extra3","_node$extra2","arg","toReferencedListDeep","parseSpread","parseRestBinding","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","_startLoc","_startPos","_left","ObjectProperty","checkLVal","in","checkClashes","allowingSloppyLetBinding","hasParenthesizedAncestor","_expression$extra","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","allowLetBinding","declareNameFromIdentifier","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","requiredParentheses","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","innerStartPos","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartPos","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","reservedTest","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","stmtToDirective","directiveLiteral","isLetKeyword","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","initNode","parseVar","parseForIn","startsWithAsync","isForOf","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","parsedNonDirective","isForIn","await","isFor","statement","isHangingStatement","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","parseClassAccessorProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","nodes","surrogate","isJSONModuleImport","nonDefaultNamedSpecifier","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrNames","importSpecifier","Parser","pluginsMap","pluginMap","_options","getParser","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginsFromOptions","pluginList","exports"],"sourceRoot":""}